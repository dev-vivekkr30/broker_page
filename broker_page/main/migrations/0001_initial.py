# Generated by Django 5.2 on 2025-06-23 20:02

import django.utils.timezone
import main.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Colony',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Colonies',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Broker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('full_name', models.CharField(max_length=255)),
                ('company', models.CharField(max_length=255)),
                ('mobile', models.CharField(max_length=15)),
                ('residence_colony', models.CharField(max_length=255)),
                ('office_address', models.TextField()),
                ('is_paid', models.BooleanField(default=False)),
                ('razorpay_payment_id', models.CharField(blank=True, max_length=100, null=True)),
                ('razorpay_order_id', models.CharField(blank=True, max_length=100, null=True)),
                ('razorpay_signature', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('about', models.TextField(blank=True, null=True)),
                ('age', models.PositiveIntegerField(blank=True, null=True)),
                ('education', models.CharField(blank=True, max_length=255, null=True)),
                ('expertise', models.CharField(blank=True, max_length=512, null=True)),
                ('whatsapp', models.CharField(blank=True, max_length=15, null=True)),
                ('google_maps_url', models.URLField(blank=True, null=True)),
                ('achievements', models.TextField(blank=True, null=True)),
                ('listings', models.TextField(blank=True, null=True)),
                ('min_deal_size', models.CharField(blank=True, max_length=50, null=True)),
                ('max_deal_size', models.CharField(blank=True, max_length=50, null=True)),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to='profile_photos/')),
                ('profile_video', models.FileField(blank=True, null=True, upload_to='profile_videos/')),
                ('facebook_url', models.URLField(blank=True, null=True)),
                ('linkedin_url', models.URLField(blank=True, null=True)),
                ('instagram_url', models.URLField(blank=True, null=True)),
                ('twitter_url', models.URLField(blank=True, null=True)),
                ('youtube_url', models.URLField(blank=True, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('is_name_verified', models.BooleanField(default=False)),
                ('is_photo_verified', models.BooleanField(default=False)),
                ('is_company_verified', models.BooleanField(default=False)),
                ('is_age_verified', models.BooleanField(default=False)),
                ('is_education_verified', models.BooleanField(default=False)),
                ('is_residence_colony_verified', models.BooleanField(default=False)),
                ('is_office_address_verified', models.BooleanField(default=False)),
                ('active_colonies', models.CharField(blank=True, max_length=1024, null=True)),
                ('plan_end_date', models.DateField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', main.models.BrokerManager()),
            ],
        ),
    ]
